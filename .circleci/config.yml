version: 2.1

orbs:
  python: circleci/python@2.1.1
  node: circleci/node@5.0.3

workflows:
  build:
    jobs:
      - build-312
      - build-310
      - build-39
      - build-38

jobs:
  build-312:
    resource_class: medium+
    docker:

      - image: cimg/python:3.12
      - image: cimg/postgres:14.18-postgis
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - node/install
      - checkout
      - restore_cache:
          key: venv-312-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Build and validate
          command: |
            sudo rm /etc/apt/sources.list.d/archive_uri-https_download_docker_com_linux_ubuntu-jammy.list
            echo "deb [arch=amd64] http://us-west-2.ec2.archive.ubuntu.com/ubuntu jammy stable" | sudo tee -a /etc/apt/sources.list.d/amazon.list
            sudo apt-get update && sudo apt-get install -y gdal-bin
            python3 -m venv /home/circleci/venv --copies
            . /home/circleci/venv/bin/activate
            pip install --upgrade pip wheel
            cd ..
            mv project simple_moderation_detoxify
            git clone https://github.com/audacious-software/Quicksilver-Django.git quicksilver
            git clone https://github.com/audacious-software/Django-Dialog-Engine.git django_dialog_engine
            git clone https://github.com/audacious-software/Django-Dialog-Engine-Builder.git django_dialog_engine_builder
            git clone https://github.com/audacious-software/Simple-Moderation-Django.git simple_moderation
            pip install -r simple_moderation_detoxify/requirements.txt simple_moderation/requirements.txt -r quicksilver/requirements.txt -r django_dialog_engine_builder/requirements.txt -r django_dialog_engine/requirements.txt
            echo "Starting Django project..."
            django-admin startproject sm
            echo "Copying over packages..."
            mv simple_moderation sm/simple_moderation
            mv simple_moderation_detoxify sm/simple_moderation_detoxify
            mv django_dialog_engine sm/django_dialog_engine
            mv django_dialog_engine_builder sm/django_dialog_engine_builder
            mv quicksilver sm/quicksilver
            echo "Setting up site..."
            cd sm
            cp simple_moderation/.circleci/circle_settings.py sm/settings.py
            cp simple_moderation/.circleci/circle_urls.py sm/urls.py
            echo "Setting up database..."
            python manage.py migrate
            python manage.py install_quicksilver_tasks
            python manage.py test
            echo "Testing..."
            cp simple_moderation/.pylintrc .
            pylint simple_moderation
            pylint simple_moderation_detoxify
            bandit -r .
      - save_cache:
          key: venv-312-{{ .Branch }}-{{ checksum "/home/circleci/sm/simple_moderation/requirements.txt" }}
          paths:
            - "/home/circleci/venv"
      - store_test_results:
          path: test-results/
      - store_artifacts:
          path: test-reports/
          destination: python_app

  build-310:
    resource_class: medium+
    docker:

      - image: cimg/python:3.10
      - image: cimg/postgres:14.18-postgis
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - node/install
      - checkout
      - restore_cache:
          key: venv-310-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Build and validate
          command: |
            sudo rm /etc/apt/sources.list.d/archive_uri-https_download_docker_com_linux_ubuntu-jammy.list
            echo "deb [arch=amd64] http://us-west-2.ec2.archive.ubuntu.com/ubuntu jammy stable" | sudo tee -a /etc/apt/sources.list.d/amazon.list
            sudo apt-get update && sudo apt-get install -y gdal-bin
            python3 -m venv /home/circleci/venv --copies
            . /home/circleci/venv/bin/activate
            pip install --upgrade pip wheel
            cd ..
            mv project simple_moderation_detoxify
            git clone https://github.com/audacious-software/Quicksilver-Django.git quicksilver
            git clone https://github.com/audacious-software/Django-Dialog-Engine.git django_dialog_engine
            git clone https://github.com/audacious-software/Django-Dialog-Engine-Builder.git django_dialog_engine_builder
            git clone https://github.com/audacious-software/Simple-Moderation-Django.git simple_moderation
            pip install -r simple_moderation_detoxify/requirements.txt simple_moderation/requirements.txt -r quicksilver/requirements.txt -r django_dialog_engine_builder/requirements.txt -r django_dialog_engine/requirements.txt
            echo "Starting Django project..."
            django-admin startproject sm
            echo "Copying over packages..."
            mv simple_moderation sm/simple_moderation
            mv simple_moderation_detoxify sm/simple_moderation_detoxify
            mv django_dialog_engine sm/django_dialog_engine
            mv django_dialog_engine_builder sm/django_dialog_engine_builder
            mv quicksilver sm/quicksilver
            echo "Setting up site..."
            cd sm
            cp simple_moderation/.circleci/circle_settings.py sm/settings.py
            cp simple_moderation/.circleci/circle_urls.py sm/urls.py
            echo "Setting up database..."
            python manage.py migrate
            python manage.py install_quicksilver_tasks
            python manage.py test
            echo "Testing..."
            cp simple_moderation/.pylintrc .
            pylint simple_moderation
            pylint simple_moderation_detoxify
            bandit -r .
      - save_cache:
          key: venv-310-{{ .Branch }}-{{ checksum "/home/circleci/sm/simple_moderation/requirements.txt" }}
          paths:
            - "/home/circleci/venv"
      - store_test_results:
          path: test-results/
      - store_artifacts:
          path: test-reports/
          destination: python_app

  build-39:
    resource_class: medium+
    docker:
      - image: cimg/python:3.9
      - image: cimg/postgres:12.18-postgis
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - node/install
      - checkout
      - restore_cache:
          key: venv-39-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Build and validate
          command: |
            sudo rm /etc/apt/sources.list.d/archive_uri-https_download_docker_com_linux_ubuntu-jammy.list
            echo "deb [arch=amd64] http://us-west-2.ec2.archive.ubuntu.com/ubuntu jammy stable" | sudo tee -a /etc/apt/sources.list.d/amazon.list
            sudo apt-get update && sudo apt-get install -y gdal-bin
            python3 -m venv /home/circleci/venv --copies
            . /home/circleci/venv/bin/activate
            pip install --upgrade pip wheel
            cd ..
            mv project simple_moderation_detoxify
            git clone https://github.com/audacious-software/Quicksilver-Django.git quicksilver
            git clone https://github.com/audacious-software/Django-Dialog-Engine.git django_dialog_engine
            git clone https://github.com/audacious-software/Django-Dialog-Engine-Builder.git django_dialog_engine_builder
            git clone https://github.com/audacious-software/Simple-Moderation-Django.git simple_moderation
            pip install -r simple_moderation_detoxify/requirements.txt simple_moderation/requirements.txt -r quicksilver/requirements.txt -r django_dialog_engine_builder/requirements.txt -r django_dialog_engine/requirements.txt
            echo "Starting Django project..."
            django-admin startproject sm
            echo "Copying over packages..."
            mv simple_moderation sm/simple_moderation
            mv simple_moderation_detoxify sm/simple_moderation_detoxify
            mv django_dialog_engine sm/django_dialog_engine
            mv django_dialog_engine_builder sm/django_dialog_engine_builder
            mv quicksilver sm/quicksilver
            echo "Setting up site..."
            cd sm
            cp simple_moderation/.circleci/circle_settings.py sm/settings.py
            cp simple_moderation/.circleci/circle_urls.py sm/urls.py
            echo "Setting up database..."
            python manage.py migrate
            python manage.py install_quicksilver_tasks
            python manage.py test
            echo "Testing..."
            cp simple_moderation/.pylintrc .
            pylint simple_moderation
            pylint simple_moderation_detoxify
            bandit -r .
      - save_cache:
          key: venv-39-{{ .Branch }}-{{ checksum "/home/circleci/sm/simple_moderation/requirements.txt" }}
          paths:
            - "/home/circleci/venv"
      - store_test_results:
          path: test-results/
      - store_artifacts:
          path: test-reports/
          destination: python_app

  build-38:
    resource_class: medium+
    docker:
      - image: cimg/python:3.8
      - image: cimg/postgres:12.18-postgis
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - node/install
      - checkout
      - restore_cache:
          key: venv-38-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Build and validate
          command: |
            sudo rm /etc/apt/sources.list.d/archive_uri-https_download_docker_com_linux_ubuntu-jammy.list
            echo "deb [arch=amd64] http://us-west-2.ec2.archive.ubuntu.com/ubuntu jammy stable" | sudo tee -a /etc/apt/sources.list.d/amazon.list
            sudo apt-get update && sudo apt-get install -y gdal-bin
            python3 -m venv /home/circleci/venv --copies
            . /home/circleci/venv/bin/activate
            pip install --upgrade pip wheel
            cd ..
            mv project simple_moderation_detoxify
            git clone https://github.com/audacious-software/Quicksilver-Django.git quicksilver
            git clone https://github.com/audacious-software/Django-Dialog-Engine.git django_dialog_engine
            git clone https://github.com/audacious-software/Django-Dialog-Engine-Builder.git django_dialog_engine_builder
            git clone https://github.com/audacious-software/Simple-Moderation-Django.git simple_moderation
            pip install -r simple_moderation_detoxify/requirements.txt simple_moderation/requirements.txt -r quicksilver/requirements.txt -r django_dialog_engine_builder/requirements.txt -r django_dialog_engine/requirements.txt
            echo "Starting Django project..."
            django-admin startproject sm
            echo "Copying over packages..."
            mv simple_moderation sm/simple_moderation
            mv simple_moderation_detoxify sm/simple_moderation_detoxify
            mv django_dialog_engine sm/django_dialog_engine
            mv django_dialog_engine_builder sm/django_dialog_engine_builder
            mv quicksilver sm/quicksilver
            echo "Setting up site..."
            cd sm
            cp simple_moderation/.circleci/circle_settings.py sm/settings.py
            cp simple_moderation/.circleci/circle_urls.py sm/urls.py
            echo "Setting up database..."
            python manage.py migrate
            python manage.py install_quicksilver_tasks
            python manage.py test
            echo "Testing..."
            cp simple_moderation/.pylintrc .
            pylint simple_moderation
            pylint simple_moderation_detoxify
            bandit -r .
      - save_cache:
          key: venv-38-{{ .Branch }}-{{ checksum "/home/circleci/sm/simple_moderation/requirements.txt" }}
          paths:
            - "/home/circleci/venv"
      - store_test_results:
          path: test-results/
      - store_artifacts:
          path: test-reports/
          destination: python_app
